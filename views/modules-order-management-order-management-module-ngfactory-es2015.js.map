{"version":3,"sources":["./src/app/modules/order-management/address-info/address-info.component.html","./src/app/modules/order-management/address-info/address-info.component.ts","./src/app/modules/order-management/order-management-routing.module.ts","./src/app/modules/order-management/order-management.module.ts","./src/app/modules/order-management/order-request/order-request.component.html","./src/app/modules/order-management/order-request/order-request.component.ts","./src/app/modules/order-management/services/order.service.ts"],"names":[],"mappings":"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","file":"modules-order-management-order-management-module-ngfactory-es2015.js","sourcesContent":["<table class=\"table\">\r\n  <tbody>\r\n    <tr>\r\n      <th>full name :</th>\r\n      <td>{{addressInfo.fullName?addressInfo.fullName:'FullName'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>address1 :</th>\r\n      <td>{{addressInfo.address1?addressInfo.address1:'Address 1'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>address2 :</th>\r\n      <td>{{addressInfo.address2?addressInfo.address2:'Address 2'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>city :</th>\r\n      <td>{{addressInfo.city?addressInfo.city:'City'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>country :</th>\r\n      <td>{{addressInfo.country?addressInfo.country:'Country'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>phone :</th>\r\n      <td>{{addressInfo.phone?addressInfo.phone:'Phone'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>postCode :</th>\r\n      <td>{{addressInfo.postCode?addressInfo.postCode:'PostCode'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>created :</th>\r\n      <td>{{(addressInfo.created?addressInfo.created:'Date') |date}}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\r\nimport { OrderService } from '../services/order.service';\r\n\r\n@Component({\r\n  selector: 'app-address-info',\r\n  templateUrl: './address-info.component.html',\r\n  styleUrls: ['./address-info.component.scss'],\r\n})\r\nexport class AddressInfoComponent implements OnInit {\r\n  addressId: number;\r\n  addressInfo\r\n  constructor(private orderService: OrderService, public ref: DynamicDialogRef, public config: DynamicDialogConfig,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.addressId = this.config.data.addressId\r\n    this.getAddressInfo(this.addressId);\r\n  }\r\n\r\n\r\n  getAddressInfo(id) {\r\n    this.orderService.getAddress(id).subscribe(data => {\r\n      this.addressInfo = data;\r\n    })\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OrderRequestComponent } from './order-request/order-request.component'\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"list\",\r\n    component: OrderRequestComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrderManagementRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { OrderManagementRoutingModule } from './order-management-routing.module';\r\nimport { OrderRequestComponent } from './order-request/order-request.component';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { TableModule } from 'primeng/table';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { AddressInfoComponent } from './address-info/address-info.component';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\n\r\n\r\n@NgModule({\r\n  declarations: [OrderRequestComponent, AddressInfoComponent],\r\n  imports: [\r\n    CommonModule,\r\n    OrderManagementRoutingModule,\r\n    ToastModule,\r\n    ToolbarModule,\r\n    ButtonModule,\r\n    TableModule,\r\n    PaginatorModule,\r\n    ConfirmDialogModule,\r\n    DynamicDialogModule\r\n  ],\r\n  entryComponents: [AddressInfoComponent],\r\n})\r\nexport class OrderManagementModule { }\r\n","<p-toast></p-toast>\r\n\r\n<div class=\"card\">\r\n\r\n  <p-toolbar styleClass=\"p-mb-4\">\r\n    <div class=\"ui-toolbar-group-left\">\r\n      <!-- <button pButton label=\"New\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" (click)=\"openNew()\"></button> -->\r\n\r\n      <button pButton label=\"Delete\" icon=\"pi pi-trash\" class=\"p-button-danger\" (click)=\"deleteSelectedItems()\"\r\n        [disabled]=\"!selecteditems || !selecteditems.length\"></button>\r\n    </div>\r\n\r\n    <div class=\"ui-toolbar-group-right\">\r\n      <h4>Order statuses</h4>\r\n      <div class=\"p-d-flex\">\r\n        <div class=\"p-d-flex p-justify-between p-align-baseline p-mb-2 p-mr-2\" *ngFor=\"let status of statuses\">\r\n          <div class=\"p-d-flex p-mr-2\">{{status.name}}</div>\r\n          <div class=\"p-d-flex\">\r\n            <button pButton class=\"p-button p-button-outlined p-button-rounded p-mr-2 p-button-sm\"\r\n              [icon]=\"'pi '+ status.icon\">\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"p-d-flex p-mt-2\">\r\n        <div class=\"p-d-flex p-justify-between p-align-baseline p-mb-2 p-mr-2\">\r\n          <div class=\"p-d-flex\">\r\n            <div class=\"p-d-flex p-mr-2 text-capitalize\">current status</div>\r\n            <div class=\"p-d-flex\">\r\n              <button pButton class=\"p-button p-button-rounded p-mr-2 p-button-sm p-button-info\"\r\n                icon=\"pi pi-circle-off\">\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"p-d-flex\">\r\n            <div class=\"p-d-flex p-mr-2 text-capitalize\">done status</div>\r\n            <div class=\"p-d-flex\">\r\n              <button pButton class=\"p-button p-button-rounded p-mr-2 p-button-sm p-button-secondary\"\r\n                icon=\"pi pi-circle-off\">\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </p-toolbar>\r\n\r\n\r\n\r\n  <p-table #dt [value]=\"orderList\" [paginator]=\"false\"\r\n    [globalFilterFields]=\"['id','userEmail','invoiceAddressId','deliveryAddressId','orderNumber','status']\"\r\n    [(selection)]=\"selecteditems\" [rowHover]=\"true\" dataKey=\"id\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [showCurrentPageReport]=\"true\">\r\n    <ng-template pTemplate=\"caption\">\r\n      <div class=\"p-d-flex p-align-stretch p-jc-between\">\r\n        <h5 class=\"p-m-0\">Order Request Management</h5>\r\n        <span class=\"p-input-icon-left\">\r\n          <i class=\"pi pi-search\"></i>\r\n          <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            placeholder=\"Search...\" />\r\n        </span>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n      <tr>\r\n        <th style=\"width: 3rem\">\r\n          <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n        </th>\r\n        <th class=\"text-capitalize\" pSortableColumn=\"id\">\r\n          Id <p-sortIcon field=\"id\"></p-sortIcon>\r\n        </th>\r\n        <th class=\"text-capitalize\" pSortableColumn=\"userEmail\">\r\n          User <p-sortIcon field=\"userEmail\"></p-sortIcon>\r\n        </th>\r\n        <th style=\"width:13rem;overflow-x: auto;\" class=\"text-capitalize p-text-center\"\r\n          pSortableColumn=\"invoiceAddressId\">\r\n          invoiceAddressId <p-sortIcon field=\"invoiceAddressId\"></p-sortIcon>\r\n        </th>\r\n        <th class=\"text-capitalize\" pSortableColumn=\"deliveryAddressId\">\r\n          deliveryAddressId <p-sortIcon field=\"deliveryAddressId\"></p-sortIcon>\r\n        </th>\r\n        <th class=\"text-capitalize\" pSortableColumn=\"orderNumber\">\r\n          orderNumber <p-sortIcon field=\"orderNumber\"></p-sortIcon>\r\n        </th>\r\n\r\n        <th class=\"text-capitalize p-text-center\" pSortableColumn=\"status\">\r\n          status <p-sortIcon field=\"status\"></p-sortIcon>\r\n        </th>\r\n        <!-- <th class=\"text-capitalize p-text-center\"></th> -->\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-item>\r\n      <tr>\r\n        <td>\r\n          <p-tableCheckbox [value]=\"item\"></p-tableCheckbox>\r\n        </td>\r\n        <td>{{item.id}}</td>\r\n        <td>{{item.userEmail?item.userEmail:'userEmail' }}</td>\r\n        <td style=\"cursor: pointer;\" (click)=\"getAddress(item.invoiceAddressId)\"><a>Link</a> </td>\r\n        <td style=\"cursor: pointer;\" (click)=\"getAddress(item.deliveryAddressId)\"><a>Link</a></td>\r\n        <td>{{item.orderNumber}}</td>\r\n        <td>\r\n          <button *ngFor=\"let status of statuses\" pButton class=\"p-button  p-button-rounded \"\r\n            [icon]=\"'pi '+ status.icon\" [title]=\"status.name\" (click)=\"changeProductStatus(item.id,status.no)\"\r\n            [ngClass]=\"{'p-button-outlined': item.status < status.no,'p-button-secondary p-button-raised': item.status > status.no, 'p-button-info p-button-raised': item.status == status.no}\">\r\n          </button>\r\n        </td>\r\n        <!-- <td class=\"p-text-center\">\r\n          <button pButton icon=\"pi pi-trash\" class=\"p-button p-button-danger p-button-sm  p-mr-2\"\r\n            (click)=\"deleteItem(item)\"></button>\r\n        </td> -->\r\n      </tr>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"summary\">\r\n      <p-paginator [rows]=\"10\" [totalRecords]=\"ListRequestCount\" (onPageChange)=\"loadMoreListRequestData($event)\">\r\n      </p-paginator>\r\n      <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n        In total there are {{ListRequestCount ? ListRequestCount : 0 }} items.\r\n      </div>\r\n    </ng-template>\r\n  </p-table>\r\n</div>\r\n\r\n\r\n<p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService, ConfirmationService } from 'primeng/api';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { AddressInfoComponent } from '../address-info/address-info.component';\r\nimport { OrderService } from '../services/order.service'\r\n\r\n@Component({\r\n  selector: 'app-order-request',\r\n  templateUrl: './order-request.component.html',\r\n  styleUrls: ['./order-request.component.scss'],\r\n  styles: [`\r\n        :host ::ng-deep .p-dialog .product-image {\r\n            width: 150px;\r\n            margin: 0 auto 2rem auto;\r\n            display: block;\r\n        }\r\n    `],\r\n  providers: [MessageService, ConfirmationService, DialogService]\r\n})\r\nexport class OrderRequestComponent implements OnInit {\r\n\r\n  statuses = [\r\n    { no: 1, name: 'Booked', icon: 'pi-calendar' },\r\n    { no: 2, name: 'Shipped', icon: 'pi-cog' },\r\n    { no: 3, name: 'Delivered', icon: 'pi-thumbs-up' },\r\n    { no: 4, name: 'Canceled', icon: 'pi-user' },\r\n  ]\r\n  productDialog: boolean;\r\n  selecteditems: string[];\r\n\r\n  submitted: boolean;\r\n  pageNo: number = 1;\r\n  ListRequestCount: number;\r\n  orderList = []\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService,\r\n    public dialogService: DialogService,\r\n    private ordersService: OrderService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getListOrder();\r\n  }\r\n\r\n\r\n\r\n  getListOrder() {\r\n    this.ordersService.getlistOrder({ pageNumber: this.pageNo }).subscribe(data => {\r\n      this.orderList = data.data;\r\n      this.ListRequestCount = data.count;\r\n    })\r\n  }\r\n\r\n  loadMoreListRequestData(event: any) {\r\n    this.pageNo = event.page + 1;\r\n    this.getListOrder();\r\n  }\r\n\r\n  deleteSelectedItems() {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to delete the selected Item?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        const productsDeletedIDs: number[] = []\r\n        let deleteRequests: Observable<any>[] = []\r\n\r\n        this.orderList = this.orderList.filter(val => !this.selecteditems.includes(val));\r\n        this.selecteditems.forEach(item => {\r\n          deleteRequests.push(this.ordersService.deleteOrderRequest(item['id']))\r\n          productsDeletedIDs.push(item['id'])\r\n        })\r\n        this.selecteditems = [];\r\n        forkJoin(deleteRequests)\r\n          .subscribe((res) => {\r\n            this.messageService.add({ severity: 'success', summary: 'Successful', detail: `Order with Id/s ( ${productsDeletedIDs.toString()} ) Successfully Deleted`, life: 3000 });\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  changeProductStatus(id: number, statusNo: number,) {\r\n    this.ordersService.changeOrderRequestStatus(id, statusNo)\r\n      .subscribe(\r\n        (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Successful', detail: `order #${id} status successfully changed`, life: 3000 });\r\n          this.getListOrder()\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n  deleteItem(item) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to delete request Number' + item.requestNumber + '?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.ordersService.deleteOrderRequest(item.id).subscribe(data => {\r\n          if (data.succeeded) {\r\n            this.messageService.add({ severity: 'success', summary: 'Successful', detail: `Order with Id #${item.id} Successfully Deleted`, life: 2000 });\r\n            this.getListOrder()\r\n            this.removeItemFromSelectedItems(item.id)\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  // refresh the selected items if the deleted item is already selected\r\n  removeItemFromSelectedItems(id: number) {\r\n    const filteredItems = this.selecteditems.filter((_item: any) => {\r\n      return _item.id != id\r\n    })\r\n    this.selecteditems = [...filteredItems]\r\n  }\r\n\r\n  getAddress(addressId) {\r\n    // \r\n    // console.log(typeOfAddress, 'typeOfAddress')\r\n    const ref = this.dialogService.open(AddressInfoComponent, {\r\n      data: {\r\n        addressId,\r\n      },\r\n      header: `Address Info`,\r\n      width: '30%',\r\n      contentStyle: { \"max-height\": \"500px\", \"overflow\": \"auto\" },\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { ApiResponse } from 'src/app/models/api-response.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  prefix: string = \"Order\"\r\n  get endPoint(): string { return `${environment.api}/${this.prefix}` }\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  getlistOrder({ pageNumber = 1, pageSize = 10 }) {\r\n    return this.http.get<ApiResponse>(`${this.endPoint}/?PageNumber=${pageNumber}&PageSize=${pageSize}`)\r\n  }\r\n\r\n  changeOrderRequestStatus(orderId: number, statusNo: number) {\r\n    let reqBody = {\r\n      id: orderId,\r\n      status: statusNo\r\n    }\r\n    return this.http.put<ApiResponse<number>>(`${this.endPoint}/updateStatus-${orderId}`, reqBody)\r\n  }\r\n\r\n  deleteOrderRequest(id: number) {\r\n    return this.http.delete<ApiResponse<number>>(`${this.endPoint}/${id}`)\r\n  }\r\n\r\n  getAddress(id: number) {\r\n    return this.http.get<ApiResponse<number>>(`${environment.api}/Address/${id}`).pipe(map(res => {\r\n      return res.data\r\n    }))\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}