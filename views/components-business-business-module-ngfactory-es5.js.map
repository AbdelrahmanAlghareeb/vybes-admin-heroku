{"version":3,"sources":["webpack:///src/app/modules/user-management/components/business/business-routing.module.ts","webpack:///src/app/modules/user-management/components/business/business.module.ts","webpack:///src/app/modules/user-management/components/business/components/business-add/business-add.component.html","webpack:///src/app/modules/user-management/components/business/components/business-add/business-add.component.ts","webpack:///src/app/modules/user-management/components/business/components/business-list/business-list.component.html","webpack:///src/app/modules/user-management/components/business/components/business-list/business-list.component.ts"],"names":["routes","path","component","BusinessRoutingModule","BusinessModule","BusinessAddComponent","BusinessListComponent","dialogService","messageService","confirmationService","UserService","fb","businessUsers","getAllBusinessUsers","getAllUsers","business","subscribe","res","data","mode","ref","addOrEdit","onClose","add","severity","summary","detail","life","user","confirm","message","userName","header","icon","accept","filter","u","id","deleteUser","changeStatus","email","businessStatus","addressId","getAddressInfo"],"mappings":"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","file":"components-business-business-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BusinessListComponent } from './components/business-list/business-list.component'\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"list\",\r\n    component: BusinessListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BusinessRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BusinessRoutingModule } from './business-routing.module';\r\nimport { BusinessListComponent } from './components/business-list/business-list.component';\r\nimport { BusinessAddComponent } from './components/business-add/business-add.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ContextMenuModule } from 'primeng/contextmenu';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { TableModule } from 'primeng/table';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { AddressInfoComponent } from '../../../order-management/address-info/address-info.component';\r\nimport { AddComponent } from '../basic/add/add.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [BusinessListComponent, BusinessAddComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BusinessRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TableModule,\r\n    DropdownModule,\r\n    MultiSelectModule,\r\n    ButtonModule,\r\n    ToolbarModule,\r\n    FileUploadModule,\r\n    DynamicDialogModule,\r\n    MultiSelectModule,\r\n    ContextMenuModule,\r\n    ToastModule,\r\n    InputTextModule,\r\n    InputNumberModule,\r\n    ConfirmDialogModule\r\n  ],\r\n  entryComponents: [\r\n    BusinessAddComponent,\r\n    AddComponent,\r\n    AddressInfoComponent\r\n  ]\r\n})\r\nexport class BusinessModule { }\r\n","<p>business-add works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-business-add',\r\n  templateUrl: './business-add.component.html',\r\n  styleUrls: ['./business-add.component.scss']\r\n})\r\nexport class BusinessAddComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<div class=\"ui-g\">\r\n  <div class=\"ui-g-12\">\r\n    <div class=\"card card-w-title\">\r\n      <h1>Business User</h1>\r\n      <p-toolbar styleClass=\"p-mb-4\">\r\n        <div class=\"ui-toolbar-group-left\">\r\n          <button pButton label=\"New\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\"\r\n            (click)=\"openNew('Add')\"></button>\r\n        </div>\r\n      </p-toolbar>\r\n      <p-table #dt [value]=\"businessUsers\" dataKey=\"id\">\r\n\r\n\r\n        <ng-template pTemplate=\"caption\">\r\n          <p class=\"p-text-center\">Global Search</p>\r\n          <div class=\" ui-column-filter p-text-center\">\r\n            <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\"\r\n              (input)=\"dt.filterGlobal($event.target.value, 'contains')\" style=\"width:250px;padding: 10px;\">\r\n          </div>\r\n        </ng-template>\r\n\r\n\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <!-- <th style=\"width: 3rem\">\r\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n            </th> -->\r\n            <th pSortableColumn=\"profile\">Profile <p-sortIcon field=\"profile\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"userName\">Username <p-sortIcon field=\"userName\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"contactEmail\">contactEmail <p-sortIcon field=\"contactEmail\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"contactPhoneNumber\">contactPhone <p-sortIcon field=\"contactPhoneNumber\">\r\n              </p-sortIcon>\r\n            </th>\r\n\r\n            <th pSortableColumn=\"ape\">Ape <p-sortIcon field=\"ape\">\r\n              </p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"siret\">Siret <p-sortIcon field=\"siret\">\r\n              </p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"addressId\">Address <p-sortIcon field=\"addressId\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"deliveryAddressId\">D-Address<p-sortIcon field=\"deliveryAddressId\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"invoiceAddressId\">I-Address <p-sortIcon field=\"invoiceAddressId\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"businessstatus\">businessstatus <p-sortIcon field=\"businessstatus\"></p-sortIcon>\r\n            </th>\r\n            <th>Actions</th>\r\n          </tr>\r\n\r\n        </ng-template>\r\n\r\n\r\n        <ng-template pTemplate=\"body\" let-user let-ri=\"rowIndex\">\r\n          <tr>\r\n            <!-- <th>\r\n              <p-tableCheckbox [value]=\"HardwareParts\"></p-tableCheckbox>\r\n            </th> -->\r\n            <td style=\"cursor: pointer;\"><a>Profile</a> </td>\r\n            <td>{{user.userName}}</td>\r\n            <td>{{user.contactEmail}}</td>\r\n            <td>{{user.contactPhoneNumber}}</td>\r\n            <td>{{user.ape}}</td>\r\n            <td>{{user.siret}}</td>\r\n            <td style=\"cursor: pointer;\" (click)=\"getAddress(user.addressId)\"><a>Address</a> </td>\r\n            <td style=\"cursor: pointer;\" (click)=\"getAddress(user.deliveryAddressId)\"><a>D-Address</a> </td>\r\n            <td style=\"cursor: pointer;\" (click)=\"getAddress(user.invoiceAddressId)\"><a>I-Address</a> </td>\r\n            <td>{{user.businessStatus}}</td>\r\n            <td>\r\n\r\n              <button pButton icon=\"pi pi-pencil\" class=\"p-button p-button-success p-mr-2\"\r\n                (click)=\"openNew('Edit',user)\"></button>\r\n\r\n\r\n              <button pButton icon=\"pi pi-trash\" class=\"p-button p-button-warning  p-mr-2\"\r\n                (click)=\"deleteUser(user)\"></button>\r\n\r\n              <button *ngIf=\"(user.businessStatus==='pending')\" pButton icon=\"pi pi-thumbs-up\"\r\n                class=\"p-button p-button-warning  p-mr-2\" (click)=\"changeStatus(user)\"></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { MessageService, ConfirmationService } from 'primeng/api';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { RoleType } from 'src/app/modules/user-management/models/role.type.enum';\r\nimport { User, UserGrouped } from 'src/app/modules/user-management/models/user.model';\r\nimport { UserService } from 'src/app/modules/user-management/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-business-list',\r\n  templateUrl: './business-list.component.html',\r\n  styleUrls: ['./business-list.component.scss'],\r\n  providers: [MessageService, ConfirmationService, DialogService]\r\n})\r\nexport class BusinessListComponent implements OnInit {\r\n  businessUsers: User[] = [];\r\n  constructor(\r\n    private dialogService: DialogService,\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService,\r\n    private UserService: UserService,\r\n    private fb: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllBusinessUsers()\r\n  }\r\n\r\n  getAllBusinessUsers() {\r\n    this.UserService.getAllUsers(RoleType.business).subscribe((res: UserGrouped) => {\r\n      this.businessUsers = res.data;\r\n    })\r\n  }\r\n\r\n  openNew(mode: string, data?) {\r\n    const ref = this.UserService.addOrEdit(mode, data, \"business\", this.dialogService, this.fb)\r\n    ref.onClose.subscribe(data => {\r\n      if (data) {\r\n        this.messageService.add({ severity: 'Success', summary: 'User Action', detail: data, life: 3000 });\r\n        this.getAllBusinessUsers();\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteUser(user: User) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to delete ' + user.userName + '?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.businessUsers = this.businessUsers.filter(u => u.id !== user.id);\r\n        this.UserService.deleteUser(user.id).subscribe(data => {\r\n          this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'User Deleted', life: 3000 });\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  changeStatus(user: User) {\r\n    this.UserService.changeStatus({ email: user.email, businessStatus: user.businessStatus }).subscribe(data => {\r\n      this.getAllBusinessUsers()\r\n    })\r\n  }\r\n\r\n  getAddress(addressId) {\r\n    const ref = this.UserService.getAddressInfo(addressId, this.dialogService)\r\n  }\r\n\r\n}\r\n"]}