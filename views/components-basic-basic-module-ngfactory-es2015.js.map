{"version":3,"sources":["./src/app/modules/user-management/components/basic/basic-routing.module.ts","./src/app/modules/user-management/components/basic/basic.module.ts","./src/app/modules/user-management/components/basic/list/list.component.html","./src/app/modules/user-management/components/basic/list/list.component.ts"],"names":[],"mappings":"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","file":"components-basic-basic-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListComponent } from './list/list.component'\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"list\",\r\n    component: ListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BasicRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BasicRoutingModule } from './basic-routing.module';\r\nimport { ListComponent } from './list/list.component';\r\nimport { AddComponent } from './add/add.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ContextMenuModule } from 'primeng/contextmenu';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { TableModule } from 'primeng/table';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { AddressInfoComponent } from 'src/app/modules/order-management/address-info/address-info.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ListComponent, AddComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BasicRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TableModule,\r\n    DropdownModule,\r\n    MultiSelectModule,\r\n    ButtonModule,\r\n    ToolbarModule,\r\n    FileUploadModule,\r\n    DynamicDialogModule,\r\n    MultiSelectModule,\r\n    ContextMenuModule,\r\n    ToastModule,\r\n    InputTextModule,\r\n    InputNumberModule,\r\n    ConfirmDialogModule\r\n  ],\r\n  entryComponents: [\r\n    AddComponent,\r\n    AddressInfoComponent\r\n  ]\r\n})\r\nexport class BasicModule { }\r\n","<p>list works!</p>\r\n<p-toast></p-toast>\r\n<div class=\"ui-g\">\r\n  <div class=\"ui-g-12\">\r\n    <div class=\"card card-w-title\">\r\n      <h1>Basic User</h1>\r\n      <p-toolbar styleClass=\"p-mb-4\">\r\n        <div class=\"ui-toolbar-group-left\">\r\n          <button pButton label=\"New\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\"\r\n            (click)=\"openNew('Add')\"></button>\r\n        </div>\r\n      </p-toolbar>\r\n      <p-table #dt [value]=\"basicUsers\" dataKey=\"id\">\r\n\r\n\r\n        <ng-template pTemplate=\"caption\">\r\n          <p class=\"p-text-center\">Global Search</p>\r\n          <div class=\" ui-column-filter p-text-center\">\r\n            <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\"\r\n              (input)=\"dt.filterGlobal($event.target.value, 'contains')\" style=\"width:250px;padding: 10px;\">\r\n          </div>\r\n        </ng-template>\r\n\r\n\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <!-- <th style=\"width: 3rem\">\r\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n            </th> -->\r\n            <th pSortableColumn=\"profile\">Profile <p-sortIcon field=\"profile\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"userName\">Username <p-sortIcon field=\"userName\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"email\">Email <p-sortIcon field=\"email\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"phoneNumber\">PhoneNumber <p-sortIcon field=\"phoneNumber\">\r\n              </p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"addressId\">Address <p-sortIcon field=\"addressId\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"deliveryAddressId\">D-Address<p-sortIcon field=\"deliveryAddressId\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"invoiceAddressId\">I-Address <p-sortIcon field=\"invoiceAddressId\"></p-sortIcon>\r\n            </th>\r\n            <th>Actions</th>\r\n          </tr>\r\n\r\n        </ng-template>\r\n\r\n\r\n        <ng-template pTemplate=\"body\" let-user let-ri=\"rowIndex\">\r\n          <tr>\r\n            <!-- <th>\r\n              <p-tableCheckbox [value]=\"HardwareParts\"></p-tableCheckbox>\r\n            </th> -->\r\n            <td style=\"cursor: pointer;\"><a>Profile</a> </td>\r\n            <td>{{user.userName}}</td>\r\n            <td>{{user.email}}</td>\r\n            <td>{{user.phoneNumber}}</td>\r\n            <td style=\"cursor: pointer;\" (click)=\"getAddress(user.addressId)\"><a>Address</a> </td>\r\n            <td style=\"cursor: pointer;\" (click)=\"getAddress(user.deliveryAddressId)\"><a>D-Address</a> </td>\r\n            <td style=\"cursor: pointer;\" (click)=\"getAddress(user.invoiceAddressId)\"><a>I-Address</a> </td>\r\n\r\n            <td>\r\n\r\n              <button pButton icon=\"pi pi-pencil\" class=\"p-button p-button-success p-mr-2\"\r\n                (click)=\"openNew('Edit',user)\"></button>\r\n\r\n\r\n              <button pButton icon=\"pi pi-trash\" class=\"p-button p-button-warning  p-mr-2\"\r\n                (click)=\"deleteUser(user)\"></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService, ConfirmationService } from 'primeng/api';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { User, UserGrouped } from '../../../models/user.model';\r\nimport { RoleType } from '../../../models/role.type.enum'\r\nimport { UserService } from \"../../../services/user.service\";\r\nimport { AddComponent } from '../add/add.component';\r\nimport { AddressInfoComponent } from 'src/app/modules/order-management/address-info/address-info.component';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  providers: [MessageService, ConfirmationService, DialogService]\r\n})\r\nexport class ListComponent implements OnInit {\r\n  basicUsers: User[] = [];\r\n  constructor(\r\n    private dialogService: DialogService,\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService,\r\n    private UserService: UserService,\r\n    private fb: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllBasicUsers()\r\n  }\r\n\r\n  getAllBasicUsers() {\r\n    this.UserService.getAllUsers(RoleType.basic).subscribe((res: UserGrouped) => {\r\n      this.basicUsers = res.data;\r\n    })\r\n  }\r\n\r\n  openNew(mode: string, data?) {\r\n    const ref = this.UserService.addOrEdit(mode, data, \"basic\", this.dialogService, this.fb)\r\n    ref.onClose.subscribe(data => {\r\n      if (data) {\r\n        this.messageService.add({ severity: 'Success', summary: 'User Action', detail: data, life: 3000 });\r\n        this.getAllBasicUsers();\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteUser(user: User) {\r\n    console.log(user)\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to delete ' + user.userName + '?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.basicUsers = this.basicUsers.filter(u => u.id !== user.id);\r\n        this.UserService.deleteUser(user.id).subscribe(data => {\r\n          this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'User Deleted', life: 3000 });\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  getAddress(addressId) {\r\n    const ref = this.UserService.getAddressInfo(addressId, this.dialogService)\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}