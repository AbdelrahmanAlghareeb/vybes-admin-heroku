{"version":3,"sources":["./src/app/modules/user-management/components/business/business-routing.module.ts","./src/app/modules/user-management/components/business/business.module.ts","./src/app/modules/user-management/components/business/components/business-add/business-add.component.html","./src/app/modules/user-management/components/business/components/business-add/business-add.component.ts","./src/app/modules/user-management/components/business/components/business-list/business-list.component.html","./src/app/modules/user-management/components/business/components/business-list/business-list.component.ts"],"names":[],"mappings":"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","file":"components-business-business-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BusinessListComponent } from './components/business-list/business-list.component'\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"list\",\r\n    component: BusinessListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BusinessRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BusinessRoutingModule } from './business-routing.module';\r\nimport { BusinessListComponent } from './components/business-list/business-list.component';\r\nimport { BusinessAddComponent } from './components/business-add/business-add.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ContextMenuModule } from 'primeng/contextmenu';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { TableModule } from 'primeng/table';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { AddressInfoComponent } from '../../../order-management/address-info/address-info.component';\r\nimport { AddComponent } from '../basic/add/add.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [BusinessListComponent, BusinessAddComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BusinessRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TableModule,\r\n    DropdownModule,\r\n    MultiSelectModule,\r\n    ButtonModule,\r\n    ToolbarModule,\r\n    FileUploadModule,\r\n    DynamicDialogModule,\r\n    MultiSelectModule,\r\n    ContextMenuModule,\r\n    ToastModule,\r\n    InputTextModule,\r\n    InputNumberModule,\r\n    ConfirmDialogModule\r\n  ],\r\n  entryComponents: [\r\n    BusinessAddComponent,\r\n    AddComponent,\r\n    AddressInfoComponent\r\n  ]\r\n})\r\nexport class BusinessModule { }\r\n","<p>business-add works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-business-add',\r\n  templateUrl: './business-add.component.html',\r\n  styleUrls: ['./business-add.component.scss']\r\n})\r\nexport class BusinessAddComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<div class=\"ui-g\">\r\n  <div class=\"ui-g-12\">\r\n    <div class=\"card card-w-title\">\r\n      <h1>Business User</h1>\r\n      <!-- <p-toolbar styleClass=\"p-mb-4\">\r\n        <div class=\"ui-toolbar-group-left\">\r\n          <button pButton label=\"New\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\"\r\n            (click)=\"openNew('Add')\"></button>\r\n        </div>\r\n      </p-toolbar> -->\r\n      <p-table #dt [value]=\"businessUsers\" dataKey=\"id\">\r\n\r\n\r\n        <ng-template pTemplate=\"caption\">\r\n          <p class=\"p-text-center\">Global Search</p>\r\n          <div class=\" ui-column-filter p-text-center\">\r\n            <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\"\r\n              (input)=\"dt.filterGlobal($event.target.value, 'contains')\" style=\"width:250px;padding: 10px;\">\r\n          </div>\r\n        </ng-template>\r\n\r\n\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <!-- <th style=\"width: 3rem\">\r\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n            </th> -->\r\n            <th pSortableColumn=\"profile\">Profile <p-sortIcon field=\"profile\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"userName\">Username <p-sortIcon field=\"userName\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"contactEmail\">contactEmail <p-sortIcon field=\"contactEmail\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"contactPhoneNumber\">contactPhone <p-sortIcon field=\"contactPhoneNumber\">\r\n              </p-sortIcon>\r\n            </th>\r\n\r\n            <th pSortableColumn=\"ape\">Ape <p-sortIcon field=\"ape\">\r\n              </p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"siret\">Siret <p-sortIcon field=\"siret\">\r\n              </p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"addressId\">Address <p-sortIcon field=\"addressId\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"deliveryAddressId\">D-Address<p-sortIcon field=\"deliveryAddressId\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"invoiceAddressId\">I-Address <p-sortIcon field=\"invoiceAddressId\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"businessstatus\">businessstatus <p-sortIcon field=\"businessstatus\"></p-sortIcon>\r\n            </th>\r\n            <th>Actions</th>\r\n          </tr>\r\n\r\n        </ng-template>\r\n\r\n\r\n        <ng-template pTemplate=\"body\" let-user let-ri=\"rowIndex\">\r\n          <tr>\r\n            <!-- <th>\r\n              <p-tableCheckbox [value]=\"HardwareParts\"></p-tableCheckbox>\r\n            </th> -->\r\n            <td style=\"cursor: pointer;\"><a>Profile</a> </td>\r\n            <td>{{user.userName}}</td>\r\n            <td>{{user.contactEmail}}</td>\r\n            <td>{{user.contactPhoneNumber}}</td>\r\n            <td>{{user.ape}}</td>\r\n            <td>{{user.siret}}</td>\r\n            <td style=\"cursor: pointer;\" (click)=\"getAddress(user.addressId)\"><a>Address</a> </td>\r\n            <td style=\"cursor: pointer;\" (click)=\"getAddress(user.deliveryAddressId)\"><a>D-Address</a> </td>\r\n            <td style=\"cursor: pointer;\" (click)=\"getAddress(user.invoiceAddressId)\"><a>I-Address</a> </td>\r\n            <td>{{user.businessStatus}}</td>\r\n            <td >\r\n\r\n              <!-- <button pButton icon=\"pi pi-pencil\" class=\"p-button p-button-success p-mr-2\"\r\n                (click)=\"openNew('Edit',user)\"></button>\r\n\r\n\r\n              <button pButton icon=\"pi pi-trash\" class=\"p-button p-button-warning  p-mr-2\"\r\n                (click)=\"deleteUser(user)\"></button> -->\r\n\r\n              <button *ngIf=\"(user.businessStatus==='pending')\" pButton icon=\"pi pi-thumbs-up\"\r\n                class=\"p-button p-button-warning  p-mr-2\" (click)=\"changeStatus(user)\"></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { MessageService, ConfirmationService } from 'primeng/api';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { RoleType } from 'src/app/modules/user-management/models/role.type.enum';\r\nimport { User, UserGrouped } from 'src/app/modules/user-management/models/user.model';\r\nimport { UserService } from 'src/app/modules/user-management/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-business-list',\r\n  templateUrl: './business-list.component.html',\r\n  styleUrls: ['./business-list.component.scss'],\r\n  providers: [MessageService, ConfirmationService, DialogService]\r\n})\r\nexport class BusinessListComponent implements OnInit {\r\n  businessUsers: User[] = [];\r\n  constructor(\r\n    private dialogService: DialogService,\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService,\r\n    private UserService: UserService,\r\n    private fb: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllBusinessUsers()\r\n  }\r\n\r\n  getAllBusinessUsers() {\r\n    this.UserService.getAllUsers(RoleType.business).subscribe((res: UserGrouped) => {\r\n      this.businessUsers = res.data;\r\n    })\r\n  }\r\n\r\n  openNew(mode: string, data?) {\r\n    const ref = this.UserService.addOrEdit(mode, data, \"business\", this.dialogService, this.fb)\r\n    ref.onClose.subscribe(data => {\r\n      if (data) {\r\n        this.messageService.add({ severity: 'Success', summary: 'User Action', detail: data, life: 3000 });\r\n        this.getAllBusinessUsers();\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteUser(user: User) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to delete ' + user.userName + '?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.businessUsers = this.businessUsers.filter(u => u.id !== user.id);\r\n        this.UserService.deleteUser(user.id).subscribe(data => {\r\n          this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'User Deleted', life: 3000 });\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  changeStatus(user: User) {\r\n    this.UserService.changeStatus({ email: user.email, businessStatus: user.businessStatus }).subscribe(data => {\r\n      this.getAllBusinessUsers()\r\n    })\r\n  }\r\n\r\n  getAddress(addressId) {\r\n    const ref = this.UserService.getAddressInfo(addressId, this.dialogService)\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}