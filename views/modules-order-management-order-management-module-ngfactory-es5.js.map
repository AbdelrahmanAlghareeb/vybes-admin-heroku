{"version":3,"sources":["webpack:///src/app/modules/order-management/address-info/address-info.component.html","webpack:///src/app/modules/order-management/address-info/address-info.component.ts","webpack:///src/app/modules/order-management/order-management-routing.module.ts","webpack:///src/app/modules/order-management/order-management.module.ts","webpack:///src/app/modules/order-management/order-request/order-request.component.html","webpack:///src/app/modules/order-management/order-request/order-request.component.ts","webpack:///src/app/modules/order-management/services/order.service.ts"],"names":["AddressInfoComponent","orderService","ref","config","addressId","data","getAddressInfo","id","getAddress","subscribe","addressInfo","routes","path","component","OrderManagementRoutingModule","OrderManagementModule","OrderRequestComponent","messageService","confirmationService","dialogService","ordersService","statuses","no","name","icon","pageNo","orderList","getListOrder","getlistOrder","pageNumber","ListOrderCount","count","event","page","confirm","message","header","accept","productsDeletedIDs","deleteRequests","filter","val","selecteditems","includes","forEach","item","push","deleteOrderRequest","res","add","severity","summary","detail","toString","life","statusNo","changeOrderRequestStatus","requestNumber","succeeded","removeItemFromSelectedItems","filteredItems","_item","open","width","contentStyle","OrderService","http","prefix","pageSize","get","endPoint","orderId","reqBody","status","put","api","pipe"],"mappings":"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","file":"modules-order-management-order-management-module-ngfactory-es5.js","sourcesContent":["<table class=\"table\">\r\n  <tbody>\r\n    <tr>\r\n      <th>full name :</th>\r\n      <td>{{addressInfo?.fullName?addressInfo.fullName:'FullName'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>address1 :</th>\r\n      <td>{{addressInfo?.address1?addressInfo.address1:'Address 1'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>address2 :</th>\r\n      <td>{{addressInfo?.address2?addressInfo.address2:'Address 2'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>city :</th>\r\n      <td>{{addressInfo?.city?addressInfo.city:'City'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>country :</th>\r\n      <td>{{addressInfo?.country?addressInfo.country:'Country'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>phone :</th>\r\n      <td>{{addressInfo?.phone?addressInfo.phone:'Phone'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>postCode :</th>\r\n      <td>{{addressInfo?.postCode?addressInfo.postCode:'PostCode'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>created :</th>\r\n      <td>{{addressInfo?.created?addressInfo.created:\"date\"}}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\r\nimport { OrderService } from '../services/order.service';\r\n\r\n@Component({\r\n  selector: 'app-address-info',\r\n  templateUrl: './address-info.component.html',\r\n  styleUrls: ['./address-info.component.scss'],\r\n})\r\nexport class AddressInfoComponent implements OnInit {\r\n  addressId: number;\r\n  addressInfo\r\n  constructor(private orderService: OrderService, public ref: DynamicDialogRef, public config: DynamicDialogConfig,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.addressId = this.config.data.addressId\r\n    this.getAddressInfo(this.addressId);\r\n  }\r\n\r\n\r\n  getAddressInfo(id) {\r\n    this.orderService.getAddress(id).subscribe(data => {\r\n      this.addressInfo = data;\r\n    })\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OrderRequestComponent } from './order-request/order-request.component'\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"list\",\r\n    component: OrderRequestComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrderManagementRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { OrderManagementRoutingModule } from './order-management-routing.module';\r\nimport { OrderRequestComponent } from './order-request/order-request.component';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { TableModule } from 'primeng/table';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { AddressInfoComponent } from './address-info/address-info.component';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\n\r\n\r\n@NgModule({\r\n  declarations: [OrderRequestComponent, AddressInfoComponent],\r\n  imports: [\r\n    CommonModule,\r\n    OrderManagementRoutingModule,\r\n    ToastModule,\r\n    ToolbarModule,\r\n    ButtonModule,\r\n    TableModule,\r\n    PaginatorModule,\r\n    ConfirmDialogModule,\r\n    DynamicDialogModule\r\n  ],\r\n  entryComponents: [AddressInfoComponent],\r\n})\r\nexport class OrderManagementModule { }\r\n","<p-toast></p-toast>\r\n<div class=\"ui-g\">\r\n  <div class=\"ui-g-12\">\r\n    <div class=\"card card-w-title\">\r\n      <h1>Mobile Phones</h1>\r\n      <p-toolbar styleClass=\"p-mb-4\">\r\n        <div class=\"ui-toolbar-group-left\">\r\n          <button pButton label=\"Delete\" icon=\"pi pi-trash\" class=\"p-button-danger\" (click)=\"deleteSelectedItems()\"\r\n            [disabled]=\"!selecteditems || !selecteditems.length\"></button>\r\n        </div>\r\n\r\n        <div class=\"ui-toolbar-group-right\">\r\n          <h4>Order statuses</h4>\r\n          <div class=\"p-d-flex\">\r\n            <div class=\"p-d-flex p-justify-between p-align-baseline p-mb-2 p-mr-2\" *ngFor=\"let status of statuses\">\r\n              <div class=\"p-d-flex p-mr-2\">{{status.name}}</div>\r\n              <div class=\"p-d-flex\">\r\n                <button pButton class=\"p-button p-button-outlined p-button-rounded p-mr-2 p-button-sm\"\r\n                  [icon]=\"'pi '+ status.icon\">\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"p-d-flex p-mt-2\">\r\n            <div class=\"p-d-flex p-justify-between p-align-baseline p-mb-2 p-mr-2\">\r\n              <div class=\"p-d-flex\">\r\n                <div class=\"p-d-flex p-mr-2 text-capitalize\">current status</div>\r\n                <div class=\"p-d-flex\">\r\n                  <button pButton class=\"p-button p-button-rounded p-mr-2 p-button-sm p-button-info\"\r\n                    icon=\"pi pi-circle-off\">\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div class=\"p-d-flex\">\r\n                <div class=\"p-d-flex p-mr-2 text-capitalize\">done status</div>\r\n                <div class=\"p-d-flex\">\r\n                  <button pButton class=\"p-button p-button-rounded p-mr-2 p-button-sm p-button-secondary\"\r\n                    icon=\"pi pi-circle-off\">\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </p-toolbar>\r\n\r\n\r\n      <p-table #dt [value]=\"orderList\" [paginator]=\"false\"\r\n        [globalFilterFields]=\"['id','userEmail','invoiceAddressId','deliveryAddressId','orderNumber','status']\"\r\n        [(selection)]=\"selecteditems\" [rowHover]=\"true\" dataKey=\"id\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [showCurrentPageReport]=\"true\">\r\n\r\n\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-d-flex p-align-stretch p-jc-between\">\r\n            <h5 class=\"p-m-0\">Order Request Management</h5>\r\n            <span class=\"p-input-icon-left\">\r\n              <i class=\"pi pi-search\"></i>\r\n              <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n                placeholder=\"Search...\" />\r\n            </span>\r\n          </div>\r\n        </ng-template>\r\n\r\n\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 3rem\">\r\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n            </th>\r\n            <th class=\"text-capitalize\" pSortableColumn=\"id\">\r\n              Id <p-sortIcon field=\"id\"></p-sortIcon>\r\n            </th>\r\n            <th class=\"text-capitalize\" pSortableColumn=\"userEmail\">\r\n              User <p-sortIcon field=\"userEmail\"></p-sortIcon>\r\n            </th>\r\n            <th style=\"width:13rem;overflow-x: auto;\" class=\"text-capitalize p-text-center\"\r\n              pSortableColumn=\"invoiceAddressId\">\r\n              invoiceAddressId <p-sortIcon field=\"invoiceAddressId\"></p-sortIcon>\r\n            </th>\r\n            <th class=\"text-capitalize\" pSortableColumn=\"deliveryAddressId\">\r\n              deliveryAddressId <p-sortIcon field=\"deliveryAddressId\"></p-sortIcon>\r\n            </th>\r\n            <th class=\"text-capitalize\" pSortableColumn=\"orderNumber\">\r\n              orderNumber <p-sortIcon field=\"orderNumber\"></p-sortIcon>\r\n            </th>\r\n\r\n            <th class=\"text-capitalize p-text-center\" pSortableColumn=\"status\">\r\n              status <p-sortIcon field=\"status\"></p-sortIcon>\r\n            </th>\r\n            <th class=\"text-capitalize p-text-center\"></th>\r\n          </tr>\r\n        </ng-template>\r\n\r\n\r\n        <ng-template pTemplate=\"body\" let-item let-expanded=\"expanded\" let-editing=\"editing\" let-ri=\"rowIndex\">\r\n          <tr>\r\n            <th>\r\n              <p-tableCheckbox [value]=\"item\"></p-tableCheckbox>\r\n            </th>\r\n            <td>\r\n              <button type=\"button\" pButton pRipple [pRowToggler]=\"item\"\r\n                class=\"p-button-text p-button-rounded p-button-plain\"\r\n                [icon]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></button>\r\n            </td>\r\n            <td>{{item.id}}</td>\r\n            <td>{{item.userEmail?item.userEmail:'userEmail' }}</td>\r\n            <td style=\"cursor: pointer;\" (click)=\"getAddress(item.invoiceAddressId)\"><a pButton icon=\"pi pi-tag\"></a>\r\n            </td>\r\n            <td style=\"cursor: pointer;\" (click)=\"getAddress(item.deliveryAddressId)\"><a pButton icon=\"pi pi-tag\"></a>\r\n            </td>\r\n            <td>{{item.orderNumber}}</td>\r\n            <td>\r\n              <button *ngFor=\"let status of statuses\" pButton class=\"p-button  p-button-rounded \"\r\n                [icon]=\"'pi '+ status.icon\" [title]=\"status.name\" (click)=\"changeProductStatus(item.id,status.no)\"\r\n                [ngClass]=\"{'p-button-outlined': item.status < status.no,'p-button-secondary p-button-raised': item.status > status.no, 'p-button-info p-button-raised': item.status == status.no}\">\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n\r\n\r\n        <ng-template pTemplate=\"rowexpansion\" let-item let-editing=\"editing\" let-ri=\"rowIndex\">\r\n          <tr>\r\n            <td colspan=\"9\">\r\n              <div class=\"p-p-3\">\r\n                <p-table [value]=\"item.orderItems\" dataKey=\"Id\">\r\n                  <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th pSortableColumn=\"id\">Id<p-sortIcon field=\"id\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"productName\">Name<p-sortIcon field=\"productName\">\r\n              </p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"categoryName\">Category<p-sortIcon field=\"categoryName\"></p-sortIcon>\r\n            </th>\r\n            <th>Image</th>\r\n            <th pSortableColumn=\"productPrice\">Price<p-sortIcon field=\"productPrice\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"productDiscountPrice\">DiscountPrice<p-sortIcon field=\"productDiscountPrice\">\r\n              </p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"quantity\">quantity<p-sortIcon field=\"quantity\">\r\n              </p-sortIcon>\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-orderItem>\r\n          <tr>\r\n\r\n            <td>{{orderItem.id}}</td>\r\n            <td>{{orderItem.productName}}</td>\r\n            <td>{{orderItem.categoryName}}</td>\r\n            <td><img\r\n                [src]=\"orderItem.productImage?'data:image/PNG;base64,'+orderItem.productImage:'../../../../../../assets/not-found.png'\"\r\n                [alt]=\"orderItem.productName\" width=\"80\" class=\"p-shadow-4 image-place\" /></td>\r\n            <td>{{orderItem.productPrice | currency:'EUR'}}</td>\r\n            <td>{{orderItem.productDiscountPrice | currency:'EUR'}}</td>\r\n\r\n            <td>{{orderItem.quantity}}</td>\r\n            <!-- <td style=\"display: flex !important; width: fit-content;\">\r\n\r\n                            <button style=\"width: 40px;\" pButton icon=\"pi pi-pencil\"\r\n                                class=\"p-button p-button-success p-mr-2\"\r\n                                (click)=\"manageVersion('Edit',mobile.id,version)\"></button>\r\n\r\n\r\n                            <button style=\"width: 40px;\" pButton icon=\"pi pi-trash\"\r\n                                class=\"p-button p-button-warning  p-mr-2\" (click)=\"deleteVersion(version)\"></button>\r\n                        </td>\r\n\t\t\t\t\t\t-->\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td colspan=\"6\">There are no orderItems for this order yet.</td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    </td>\r\n    </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"summary\">\r\n      <p-paginator [rows]=\"10\" [totalRecords]=\"ListOrderCount\" (onPageChange)=\"loadMoreListOrdrData($event)\">\r\n      </p-paginator>\r\n      <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n        In total there are {{ListOrderCount ? ListOrderCount : 0 }} items.\r\n      </div>\r\n    </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n\r\n\r\n<p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService, ConfirmationService } from 'primeng/api';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { AddressInfoComponent } from '../address-info/address-info.component';\r\nimport { OrderService } from '../services/order.service'\r\n\r\n@Component({\r\n  selector: 'app-order-request',\r\n  templateUrl: './order-request.component.html',\r\n  styleUrls: ['./order-request.component.scss'],\r\n  styles: [`\r\n        :host ::ng-deep .p-dialog .product-image {\r\n            width: 150px;\r\n            margin: 0 auto 2rem auto;\r\n            display: block;\r\n        }\r\n    `],\r\n  providers: [MessageService, ConfirmationService, DialogService]\r\n})\r\nexport class OrderRequestComponent implements OnInit {\r\n\r\n  statuses = [\r\n    { no: 1, name: 'Booked', icon: 'pi-calendar' },\r\n    { no: 2, name: 'Shipped', icon: 'pi-cog' },\r\n    { no: 3, name: 'Delivered', icon: 'pi-thumbs-up' },\r\n    { no: 4, name: 'Canceled', icon: 'pi-user' },\r\n  ]\r\n  productDialog: boolean;\r\n  selecteditems: string[];\r\n\r\n  submitted: boolean;\r\n  pageNo: number = 1;\r\n  ListOrderCount: number;\r\n  orderList = []\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService,\r\n    public dialogService: DialogService,\r\n    private ordersService: OrderService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getListOrder();\r\n  }\r\n\r\n\r\n\r\n  getListOrder() {\r\n    this.ordersService.getlistOrder({ pageNumber: this.pageNo }).subscribe(data => {\r\n      this.orderList = data.data;\r\n      this.ListOrderCount = data.count;\r\n    })\r\n  }\r\n\r\n  loadMoreListOrdrData(event: any) {\r\n    this.pageNo = event.page + 1;\r\n    this.getListOrder();\r\n  }\r\n\r\n  deleteSelectedItems() {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to delete the selected Item?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        const productsDeletedIDs: number[] = []\r\n        let deleteRequests: Observable<any>[] = []\r\n\r\n        this.orderList = this.orderList.filter(val => !this.selecteditems.includes(val));\r\n        this.selecteditems.forEach(item => {\r\n          deleteRequests.push(this.ordersService.deleteOrderRequest(item['id']))\r\n          productsDeletedIDs.push(item['id'])\r\n        })\r\n        this.selecteditems = [];\r\n        forkJoin(deleteRequests)\r\n          .subscribe((res) => {\r\n            this.messageService.add({ severity: 'success', summary: 'Successful', detail: `Order with Id/s ( ${productsDeletedIDs.toString()} ) Successfully Deleted`, life: 3000 });\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  changeProductStatus(id: number, statusNo: number,) {\r\n    this.ordersService.changeOrderRequestStatus(id, statusNo)\r\n      .subscribe(\r\n        (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Successful', detail: `order #${id} status successfully changed`, life: 3000 });\r\n          this.getListOrder()\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n  deleteItem(item) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to delete request Number' + item.requestNumber + '?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.ordersService.deleteOrderRequest(item.id).subscribe(data => {\r\n          if (data.succeeded) {\r\n            this.messageService.add({ severity: 'success', summary: 'Successful', detail: `Order with Id #${item.id} Successfully Deleted`, life: 2000 });\r\n            this.getListOrder()\r\n            this.removeItemFromSelectedItems(item.id)\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  // refresh the selected items if the deleted item is already selected\r\n  removeItemFromSelectedItems(id: number) {\r\n    const filteredItems = this.selecteditems.filter((_item: any) => {\r\n      return _item.id != id\r\n    })\r\n    this.selecteditems = [...filteredItems]\r\n  }\r\n\r\n  getAddress(addressId) {\r\n    // \r\n    // console.log(typeOfAddress, 'typeOfAddress')\r\n    const ref = this.dialogService.open(AddressInfoComponent, {\r\n      data: {\r\n        addressId,\r\n      },\r\n      header: `Address Info`,\r\n      width: '30%',\r\n      contentStyle: { \"max-height\": \"500px\", \"overflow\": \"auto\" },\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { ApiResponse } from 'src/app/models/api-response.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  prefix: string = \"Order\"\r\n  get endPoint(): string { return `${environment.api}/${this.prefix}` }\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  getlistOrder({ pageNumber = 1, pageSize = 10 }) {\r\n    return this.http.get<ApiResponse>(`${this.endPoint}/?PageNumber=${pageNumber}&PageSize=${pageSize}`)\r\n  }\r\n\r\n  changeOrderRequestStatus(orderId: number, statusNo: number) {\r\n    let reqBody = {\r\n      id: orderId,\r\n      status: statusNo\r\n    }\r\n    return this.http.put<ApiResponse<number>>(`${this.endPoint}/updateStatus-${orderId}`, reqBody)\r\n  }\r\n\r\n  deleteOrderRequest(id: number) {\r\n    return this.http.delete<ApiResponse<number>>(`${this.endPoint}/${id}`)\r\n  }\r\n\r\n  getAddress(id: number) {\r\n    return this.http.get<ApiResponse<number>>(`${environment.api}/Address/${id}`).pipe(map(res => {\r\n      return res.data\r\n    }))\r\n  }\r\n}\r\n"]}