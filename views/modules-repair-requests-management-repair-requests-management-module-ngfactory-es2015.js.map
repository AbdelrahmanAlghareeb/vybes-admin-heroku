{"version":3,"sources":["./src/app/modules/repair-requests-management/list-repair-requests/list-repair-requests.component.html","./src/app/modules/repair-requests-management/list-repair-requests/list-repair-requests.component.ts","./src/app/modules/repair-requests-management/models/change-repair-req-status-reques.model.ts","./src/app/modules/repair-requests-management/repair-requests-management-routing.module.ts","./src/app/modules/repair-requests-management/repair-requests-management.component.ts.RepairRequestsManagementComponent.html","./src/app/modules/repair-requests-management/repair-requests-management.component.ts","./src/app/modules/repair-requests-management/repair-requests-management.module.ts","./src/app/modules/repair-requests-management/services/repair-requests.service.ts"],"names":[],"mappings":"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","file":"modules-repair-requests-management-repair-requests-management-module-ngfactory-es2015.js","sourcesContent":["<p-toast></p-toast>\r\n\r\n<div class=\"card\">\r\n\r\n  <p-toolbar styleClass=\"p-mb-4\">\r\n    <div class=\"ui-toolbar-group-left\">\r\n      <!-- <button pButton label=\"New\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" (click)=\"openNew()\"></button> -->\r\n\r\n      <button pButton label=\"Delete\" icon=\"pi pi-trash\" class=\"p-button-danger\" (click)=\"deleteSelectedItems()\"\r\n        [disabled]=\"!selecteditems || !selecteditems.length\"></button>\r\n    </div>\r\n\r\n    <div class=\"ui-toolbar-group-right\">\r\n      <h4>Repair request statuses</h4>\r\n      <div class=\"p-d-flex\">\r\n        <div class=\"p-d-flex p-justify-between p-align-baseline p-mb-2 p-mr-2\" *ngFor=\"let status of statuses\">\r\n          <div class=\"p-d-flex p-mr-2\">{{status.name}}</div>\r\n          <div class=\"p-d-flex\">\r\n            <button pButton class=\"p-button p-button-outlined p-button-rounded p-mr-2 p-button-sm\"\r\n              [icon]=\"'pi '+ status.icon\">\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"p-d-flex p-mt-2\">\r\n        <div class=\"p-d-flex p-justify-between p-align-baseline p-mb-2 p-mr-2\">\r\n          <div class=\"p-d-flex\">\r\n            <div class=\"p-d-flex p-mr-2 text-capitalize\">current status</div>\r\n            <div class=\"p-d-flex\">\r\n              <button pButton class=\"p-button p-button-rounded p-mr-2 p-button-sm p-button-info\"\r\n                icon=\"pi pi-circle-off\">\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"p-d-flex\">\r\n            <div class=\"p-d-flex p-mr-2 text-capitalize\">done status</div>\r\n            <div class=\"p-d-flex\">\r\n              <button pButton class=\"p-button p-button-rounded p-mr-2 p-button-sm p-button-secondary\"\r\n                icon=\"pi pi-circle-off\">\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </p-toolbar>\r\n\r\n\r\n\r\n  <p-table #dt [value]=\"repairRequestList\" [paginator]=\"false\"\r\n    [globalFilterFields]=\"['id','user','branch','amount','requestNumber','deviceProblem','appointment','status']\"\r\n    [(selection)]=\"selecteditems\" [rowHover]=\"true\" dataKey=\"id\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [showCurrentPageReport]=\"true\">\r\n    <ng-template pTemplate=\"caption\">\r\n      <div class=\"p-d-flex p-align-stretch p-jc-between\">\r\n        <h5 class=\"p-m-0\">Repair Request Management</h5>\r\n        <span class=\"p-input-icon-left\">\r\n          <i class=\"pi pi-search\"></i>\r\n          <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            placeholder=\"Search...\" />\r\n        </span>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n      <tr>\r\n        <th style=\"width: 3rem\">\r\n          <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n        </th>\r\n        <th style=\"width: 5rem\" class=\"text-capitalize\" pSortableColumn=\"id\">\r\n          Id <p-sortIcon field=\"id\"></p-sortIcon>\r\n        </th>\r\n        <th class=\"text-capitalize\" pSortableColumn=\"requestNumber\">\r\n          Req NO. <p-sortIcon field=\"requestNumber\"></p-sortIcon>\r\n        </th>\r\n        <th style=\"width:13rem;overflow-x: auto;\" class=\"text-capitalize p-text-center\" pSortableColumn=\"userEmail\">\r\n          User <p-sortIcon field=\"userEmail\"></p-sortIcon>\r\n        </th>\r\n        <th class=\"text-capitalize\" pSortableColumn=\"deviceBrandName\">\r\n          Brand <p-sortIcon field=\"deviceBrandName\"></p-sortIcon>\r\n        </th>\r\n        <th class=\"text-capitalize\" pSortableColumn=\"deviceModelName\">\r\n          Model <p-sortIcon field=\"deviceModelName\"></p-sortIcon>\r\n        </th>\r\n        <th style=\"overflow-x: auto;\" class=\"text-capitalize\" pSortableColumn=\"problemName\">\r\n          Problem <p-sortIcon field=\"problemName\"></p-sortIcon>\r\n        </th>\r\n        <th style=\"width: 5rem;\" class=\"text-capitalize\" pSortableColumn=\"amount\">\r\n          qty <p-sortIcon field=\"amount\"></p-sortIcon>\r\n        </th>\r\n        <th class=\"text-capitalize\" pSortableColumn=\"branch\">\r\n          Branch <p-sortIcon field=\"branch\"></p-sortIcon>\r\n        </th>\r\n        <th style=\"width: 11rem;\" class=\"text-capitalize\" pSortableColumn=\"appointment\">\r\n          appointment <p-sortIcon field=\"appointment\"></p-sortIcon>\r\n        </th>\r\n        <th style=\"width: 12rem;\" class=\"text-capitalize p-text-center\" pSortableColumn=\"status\">\r\n          status <p-sortIcon field=\"status\"></p-sortIcon>\r\n        </th>\r\n        <!-- <th class=\"text-capitalize p-text-center\">Actions</th> -->\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-item>\r\n      <tr>\r\n        <td>\r\n          <p-tableCheckbox [value]=\"item\"></p-tableCheckbox>\r\n        </td>\r\n        <td>{{item.id}}</td>\r\n        <td>{{item.requestNumber}}</td>\r\n        <td>{{item.userEmail }}</td>\r\n        <td>{{item.deviceBrandName}}</td>\r\n        <td>{{item.deviceModelName}}</td>\r\n        <td>{{item.problemName}}</td>\r\n        <td>{{item.amount }}</td>\r\n        <td>{{item.branchName}}</td>\r\n        <td>{{item.appointment |date : 'long'}}</td>\r\n        <td>\r\n          <button *ngFor=\"let status of statuses\" pButton class=\"p-button  p-button-rounded p-mr-2 p-button-sm\"\r\n            [icon]=\"'pi '+ status.icon\" [title]=\"status.name\" (click)=\"changeProductStatus(item.id,status.no)\"\r\n            [ngClass]=\"{'p-button-outlined': item.status < status.no,'p-button-secondary p-button-raised': item.status > status.no, 'p-button-info p-button-raised': item.status == status.no}\">\r\n          </button>\r\n        </td>\r\n        <!-- <td class=\"p-text-center\">\r\n          <button pButton icon=\"pi pi-trash\" class=\"p-button p-button-danger p-button-sm  p-mr-2\"\r\n            (click)=\"deleteItem(item)\"></button>\r\n        </td> -->\r\n      </tr>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"summary\">\r\n      <p-paginator [rows]=\"10\" [totalRecords]=\"ListRequestCount\" (onPageChange)=\"loadMoreListRequestData($event)\">\r\n      </p-paginator>\r\n      <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n        In total there are {{ListRequestCount ? ListRequestCount : 0 }} items.\r\n      </div>\r\n    </ng-template>\r\n  </p-table>\r\n</div>\r\n\r\n\r\n<p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>","import { Component, OnInit } from '@angular/core';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { MessageService } from 'primeng/api';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { OrderRequestComponent } from '../../order-management/order-request/order-request.component';\r\nimport { RepairRequestResponse } from '../models/repair-request-response';\r\nimport { RepairRequestsService } from '../services/repair-requests.service';\r\n\r\n@Component({\r\n  selector: 'app-list-repair-requests',\r\n  templateUrl: './list-repair-requests.component.html',\r\n  styleUrls: [\r\n    './list-repair-requests.component.css',\r\n    '../../../demo/view/tabledemo.scss'\r\n  ],\r\n  styles: [`\r\n        :host ::ng-deep .p-dialog .product-image {\r\n            width: 150px;\r\n            margin: 0 auto 2rem auto;\r\n            display: block;\r\n        }\r\n    `],\r\n  providers: [MessageService, ConfirmationService, DialogService]\r\n})\r\nexport class ListRepairRequestsComponent implements OnInit {\r\n  statuses = [\r\n    { no: 1, name: 'Booked', icon: 'pi-calendar' },\r\n    { no: 2, name: 'Repairing', icon: 'pi-cog' },\r\n    { no: 3, name: 'Finshed', icon: 'pi-thumbs-up' },\r\n    { no: 4, name: 'Collected', icon: 'pi-user' },\r\n    { no: 5, name: 'Canceled', icon: 'pi-user' },\r\n  ]\r\n  productDialog: boolean;\r\n  selecteditems: RepairRequestResponse[];\r\n\r\n  submitted: boolean;\r\n  pageNo: number = 1;\r\n  ListRequestCount: number;\r\n  repairRequestList: RepairRequestResponse[] = []\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService,\r\n    public dialogService: DialogService,\r\n    private RepairRequestsService: RepairRequestsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getListRequest();\r\n\r\n  }\r\n\r\n\r\n\r\n  getListRequest() {\r\n    this.RepairRequestsService.getlistRepairRequest({ pageNumber: this.pageNo }).subscribe(data => {\r\n      this.repairRequestList = data.data;\r\n      this.ListRequestCount = data.count;\r\n    })\r\n  }\r\n\r\n  loadMoreListRequestData(event: any) {\r\n    this.pageNo = event.page + 1;\r\n    this.getListRequest();\r\n  }\r\n\r\n  deleteSelectedItems() {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to delete the selected Item?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        const productsDeletedIDs: number[] = []\r\n        let deleteRequests: Observable<any>[] = []\r\n        // this.repairRequestList = this.repairRequestList.filter(val => !this.selecteditems.includes(val));\r\n        this.selecteditems.forEach(item => {\r\n          deleteRequests.push(this.RepairRequestsService.deleteRepairRequest(item.id))\r\n          productsDeletedIDs.push(item.id)\r\n        })\r\n        this.selecteditems = [];\r\n        forkJoin(deleteRequests)\r\n          .subscribe((res) => {\r\n            this.messageService.add({ severity: 'success', summary: 'Successful', detail: `Repair Request/s with Id/s ( ${productsDeletedIDs.toString()} ) Successfully Deleted`, life: 3000 });\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  changeProductStatus(id: number, statusNo: number,) {\r\n    this.RepairRequestsService.changeRepairRequestStatus(id, statusNo)\r\n      .subscribe(\r\n        (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Successful', detail: `Request #${id} status successfully changed`, life: 3000 });\r\n          this.getListRequest()\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n  deleteItem(item: RepairRequestResponse) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to delete request Number' + item.requestNumber + '?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.RepairRequestsService.deleteRepairRequest(item.id).subscribe(data => {\r\n          if (data.succeeded) {\r\n            this.getListRequest()\r\n            this.removeItemFromSelectedItems(item.id)\r\n            this.messageService.add({ severity: 'success', summary: 'Successful', detail: `Repair request with Id #${item.id} Successfully Deleted`, life: 3000 });\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  // refresh the selected items if the deleted item is already selected\r\n  removeItemFromSelectedItems(id: number) {\r\n    const filteredItems = this.selecteditems.filter((_item: RepairRequestResponse) => {\r\n      return _item.id != id\r\n    })\r\n    this.selecteditems = [...filteredItems]\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","\r\nexport class UpdateRepairReqStatusRequest {\r\n    status : number\r\n    id : number\r\n    constructor(id:number,status:number){\r\n        this.id = id\r\n        this.status = status\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListRepairRequestsComponent } from './list-repair-requests/list-repair-requests.component';\r\nimport { RepairRequestsManagementComponent } from './repair-requests-management.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: RepairRequestsManagementComponent,\r\n    children: [\r\n      { path: 'list', component: ListRepairRequestsComponent },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RepairRequestsManagementRoutingModule { }\r\n","\n  <router-outlet></router-outlet>\n  ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-repair-requests-management',\r\n  template: `\r\n  <router-outlet></router-outlet>\r\n  `,\r\n  styles: []\r\n})\r\nexport class RepairRequestsManagementComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RepairRequestsManagementRoutingModule } from './repair-requests-management-routing.module';\r\nimport { ListRepairRequestsComponent } from './list-repair-requests/list-repair-requests.component';\r\n\r\nimport { TableModule } from 'primeng/table';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { SliderModule } from 'primeng/slider';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { ContextMenuModule } from 'primeng/contextmenu';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { RatingModule } from 'primeng/rating';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\n\r\n\r\nimport { RepairRequestsManagementComponent } from './repair-requests-management.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ListRepairRequestsComponent, RepairRequestsManagementComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RepairRequestsManagementRoutingModule,\r\n    TableModule,\r\n    CalendarModule,\r\n    SliderModule,\r\n    DialogModule,\r\n    MultiSelectModule,\r\n    ContextMenuModule,\r\n    DropdownModule,\r\n    ButtonModule,\r\n    ToastModule,\r\n    InputTextModule,\r\n    ProgressBarModule,\r\n    FileUploadModule,\r\n    ToolbarModule,\r\n    RatingModule,\r\n    FormsModule,\r\n    RadioButtonModule,\r\n    ConfirmDialogModule,\r\n    SplitButtonModule,\r\n    DynamicDialogModule,\r\n    PaginatorModule,\r\n    InputNumberModule\r\n  ],\r\n})\r\nexport class RepairRequestsManagementModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RepairRequestResponse } from '../models/repair-request-response';\r\nimport { UpdateRepairReqStatusRequest } from '../models/change-repair-req-status-reques.model';\r\nimport { ApiResponse } from '../../../models/api-response.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RepairRequestsService {\r\n  prefix :string = \"RepairRequest\"\r\n  get endPoint() : string { return `${environment.api}/${this.prefix}` }\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  getlistRepairRequest({ pageNumber = 1, pageSize = 10 }) {\r\n    return this.http.get<ApiResponse<RepairRequestResponse[]>>(`${this.endPoint}/?PageNumber=${pageNumber}&PageSize=${pageSize}`)\r\n  }\r\n\r\n  changeRepairRequestStatus(repairRequestId:number,statusNo:number) {\r\n    let reqBody = new UpdateRepairReqStatusRequest(repairRequestId,statusNo)\r\n    return this.http.put<ApiResponse<number>>(`${this.endPoint}/updateStatus-${repairRequestId}`,reqBody)\r\n  }\r\n\r\n  deleteRepairRequest(id:number ) {\r\n    return this.http.delete<ApiResponse<number>>(`${this.endPoint}/${id}`)\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}