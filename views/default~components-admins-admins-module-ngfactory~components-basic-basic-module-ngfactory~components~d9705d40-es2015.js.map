{"version":3,"sources":["./src/app/modules/order-management/address-info/address-info.component.html","./src/app/modules/order-management/address-info/address-info.component.ts","./src/app/modules/order-management/services/order.service.ts","./src/app/modules/user-management/components/basic/add/add.component.html","./src/app/modules/user-management/components/basic/add/add.component.ts","./src/app/modules/user-management/models/role.type.enum.ts","./src/app/modules/user-management/services/custom-validation.ts","./src/app/modules/user-management/services/user.service.ts"],"names":[],"mappings":"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","file":"default~components-admins-admins-module-ngfactory~components-basic-basic-module-ngfactory~components~d9705d40-es2015.js","sourcesContent":["<table class=\"table\">\r\n  <tbody>\r\n    <tr>\r\n      <th>full name :</th>\r\n      <td>{{addressInfo?.fullName?addressInfo.fullName:'FullName'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>address1 :</th>\r\n      <td>{{addressInfo?.address1?addressInfo.address1:'Address 1'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>address2 :</th>\r\n      <td>{{addressInfo?.address2?addressInfo.address2:'Address 2'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>city :</th>\r\n      <td>{{addressInfo?.city?addressInfo.city:'City'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>country :</th>\r\n      <td>{{addressInfo?.country?addressInfo.country:'Country'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>phone :</th>\r\n      <td>{{addressInfo?.phone?addressInfo.phone:'Phone'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>postCode :</th>\r\n      <td>{{addressInfo?.postCode?addressInfo.postCode:'PostCode'}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>created :</th>\r\n      <td>{{addressInfo?.created?addressInfo.created:\"date\"}}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\r\nimport { OrderService } from '../services/order.service';\r\n\r\n@Component({\r\n  selector: 'app-address-info',\r\n  templateUrl: './address-info.component.html',\r\n  styleUrls: ['./address-info.component.scss'],\r\n})\r\nexport class AddressInfoComponent implements OnInit {\r\n  addressId: number;\r\n  addressInfo\r\n  constructor(private orderService: OrderService, public ref: DynamicDialogRef, public config: DynamicDialogConfig,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.addressId = this.config.data.addressId\r\n    this.getAddressInfo(this.addressId);\r\n  }\r\n\r\n\r\n  getAddressInfo(id) {\r\n    this.orderService.getAddress(id).subscribe(data => {\r\n      this.addressInfo = data;\r\n    })\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { ApiResponse } from 'src/app/models/api-response.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  prefix: string = \"Order\"\r\n  get endPoint(): string { return `${environment.api}/${this.prefix}` }\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  getlistOrder({ pageNumber = 1, pageSize = 10 }) {\r\n    return this.http.get<ApiResponse>(`${this.endPoint}/?PageNumber=${pageNumber}&PageSize=${pageSize}`)\r\n  }\r\n\r\n  changeOrderRequestStatus(orderId: number, statusNo: number) {\r\n    let reqBody = {\r\n      id: orderId,\r\n      status: statusNo\r\n    }\r\n    return this.http.put<ApiResponse<number>>(`${this.endPoint}/updateStatus-${orderId}`, reqBody)\r\n  }\r\n\r\n  deleteOrderRequest(id: number) {\r\n    return this.http.delete<ApiResponse<number>>(`${this.endPoint}/${id}`)\r\n  }\r\n\r\n  getAddress(id: number) {\r\n    return this.http.get<ApiResponse<number>>(`${environment.api}/Address/${id}`).pipe(map(res => {\r\n      return res.data\r\n    }))\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n\r\n<form *ngIf=\"userForm\" [formGroup]=\"userForm\" (ngSubmit)=\"handleUser()\" class=\"p-fluid\">\r\n\r\n  <div class=\"p-fluid p-formgrid p-grid\">\r\n\r\n    <div class=\"p-field p-col-12 p-md-6\">\r\n      <label for=\"firstName\" class=\"p-col-12\">First Name</label>\r\n      <input formControlName=\"firstName\" id=\"firstName\" type=\"text\" pInputText>\r\n    </div>\r\n\r\n    <div class=\"p-field p-col-12 p-md-6\">\r\n      <label for=\"lastName\" class=\"p-col-12 \">Last Name</label>\r\n      <input formControlName=\"lastName\" id=\"lastName\" type=\"text\" pInputText>\r\n    </div>\r\n\r\n    <div class=\"p-field p-col-12 p-md-6\">\r\n      <label for=\"userName\" class=\"p-col-12 \">userName</label>\r\n      <input formControlName=\"userName\" id=\"userName\" type=\"text\" pInputText>\r\n    </div>\r\n\r\n    <div class=\"p-field p-col-6\">\r\n      <label for=\"email\" class=\"p-col-12 \">Email</label>\r\n      <input formControlName=\"email\" id=\"email\" type=\"text\" pInputText>\r\n    </div>\r\n\r\n    <div class=\"p-field p-col-6\" *ngIf=\"mode==='Add'\">\r\n      <label for=\"password\" class=\"p-col-12 \">password</label>\r\n      <input formControlName=\"password\" id=\"password\" type=\"text\" pInputText>\r\n    </div>\r\n\r\n    <div class=\"p-field p-col-6\" *ngIf=\"mode==='Add'\">\r\n      <label for=\"confirmPassword\" class=\"p-col-12 \">confirmPassword</label>\r\n      <input formControlName=\"confirmPassword\" id=\"confirmPassword\" type=\"text\" pInputText>\r\n    </div>\r\n\r\n    <button pButton type=\"submit\" label=\"{{mode}} User\" [disabled]=\"!userForm.valid\"></button>\r\n  </div>\r\n\r\n</form>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\r\nimport { RoleType } from '../../../models/role.type.enum';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { UserFormGroup } from '../../../services/userForm';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add',\r\n  templateUrl: './add.component.html',\r\n  styleUrls: ['./add.component.scss']\r\n})\r\nexport class AddComponent implements OnInit {\r\n  mode: string;\r\n  data: {};\r\n  userType: string\r\n  userForm: FormGroup;\r\n  constructor(\r\n    private messageService: MessageService,\r\n    public ref: DynamicDialogRef,\r\n    public config: DynamicDialogConfig,\r\n    private UserService: UserService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.mode = this.config.data.mode;\r\n    this.userType = this.config.data.userType\r\n    this.userForm = this.config.data.form();\r\n    this.data = this.config.data.data ? this.config.data.data : null;\r\n    if (this.data) {\r\n      console.log(this.data)\r\n      this.userForm.patchValue(this.data);\r\n    }\r\n  }\r\n\r\n  // createUserForm() {\r\n  //   this.userForm = this.UserService.builderForm(this.fb);\r\n  // }\r\n\r\n  handleUser() {\r\n    if (!this.userForm.valid) {\r\n      this.userForm.markAllAsTouched();\r\n      return this.messageService.add({ severity: 'Error', summary: 'Required Field', detail: 'Required Input', life: 3000 });\r\n    }\r\n\r\n    if (this.mode === \"Add\") {\r\n      let user = this.userForm.value;\r\n      user['role'] = RoleType[this.userType];\r\n      this.UserService.addUser(this.userForm.value).subscribe(data => {\r\n        this.ref.close('User Added');\r\n      },\r\n        (error: HttpErrorResponse) => {\r\n          console.log(error)\r\n          this.messageService.add({ severity: 'Error', summary: 'User', detail: error.error['message'], life: 2000 });\r\n        }\r\n      )\r\n    } else if (this.mode === \"Edit\") {\r\n      this.UserService.editUser(this.data['id'], \"Basic\", this.userForm.value).subscribe(data => {\r\n        this.ref.close('User Edited');\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","export enum RoleType {\r\n  superadmin = 1,\r\n  admin = 2,\r\n  moderator = 3,\r\n  basic = 4,\r\n  business = 5\r\n}","import { FormGroup } from '@angular/forms';\r\n\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n  return (formGroup: FormGroup) => {\r\n      const control = formGroup.controls[controlName];\r\n      const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n          // return if another validator has already found an error on the matchingControl\r\n          return;\r\n      }\r\n\r\n      // set error on matchingControl if validation fails\r\n      if (control.value !== matchingControl.value) {\r\n          matchingControl.setErrors({ mustMatch: true });\r\n      } else {\r\n          matchingControl.setErrors(null);\r\n      }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AddressInfoComponent } from '../../order-management/address-info/address-info.component';\r\nimport { AddComponent } from '../components/basic/add/add.component';\r\nimport { User, UserGrouped } from '../models/user.model';\r\nimport { MustMatch } from './custom-validation';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  builderForm(fb: FormBuilder, mode): FormGroup {\r\n    let form = fb.group({\r\n      firstName: new FormControl('', [Validators.required]),\r\n      lastName: new FormControl('', [Validators.required]),\r\n      email: new FormControl('', [Validators.required]),\r\n      userName: new FormControl('', [Validators.required]),\r\n    })\r\n    if (mode === 'Add') {\r\n      return fb.group({\r\n        firstName: new FormControl('', [Validators.required]),\r\n        lastName: new FormControl('', [Validators.required]),\r\n        email: new FormControl('', [Validators.required]),\r\n        userName: new FormControl('', [Validators.required]),\r\n        password: new FormControl('', {\r\n          updateOn: 'change',\r\n          validators: [\r\n            Validators.required,\r\n            Validators.minLength(6),\r\n            Validators.pattern(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?{}()&])[A-Za-z\\d@$!%*#?{}()&]{8,}$/),\r\n          ]\r\n        }),\r\n        confirmPassword: new FormControl('', {\r\n          updateOn: 'change',\r\n          validators: [Validators.required],\r\n        }),\r\n      },\r\n        { validator: MustMatch('password', 'confirmPassword') }\r\n      )\r\n\r\n    } else {\r\n      return form\r\n    }\r\n  }\r\n\r\n\r\n  addOrEdit(mode, data, userType, dialogService: DialogService, fb: FormBuilder) {\r\n    return dialogService.open(AddComponent, {\r\n      data: {\r\n        data,\r\n        mode: mode,\r\n        userType,\r\n        form: () => this.builderForm(fb, mode)\r\n      },\r\n      header: `${mode} ${userType} User`,\r\n      width: '50%',\r\n      contentStyle: { \"max-height\": \"500px\", \"overflow\": \"auto\" }\r\n    });\r\n  }\r\n\r\n  getAddressInfo(addressId, dialogService: DialogService) {\r\n    return dialogService.open(AddressInfoComponent, {\r\n      data: {\r\n        addressId,\r\n      },\r\n      header: `Address Info`,\r\n      width: '30%',\r\n      contentStyle: { \"max-height\": \"500px\", \"overflow\": \"auto\" },\r\n    });\r\n  }\r\n\r\n  getAllUsers(Role: number) {\r\n    return this.http.get(`${environment.accountApi}/GetAllUsers?Role=${Role}`).pipe(map((res: UserGrouped) => {\r\n      return res\r\n    }))\r\n  }\r\n\r\n  addUser(user: User) {\r\n    return this.http.post(`${environment.accountApi}/addAccount`, user).pipe(map(res => {\r\n      return res\r\n    }))\r\n  }\r\n\r\n  editUser(userId: number, type: string, newData: User) {\r\n    return this.http.put(`${environment.accountApi}/update${type}-${userId}`, newData).pipe(map(res => {\r\n      return res\r\n    }))\r\n  }\r\n\r\n\r\n  deleteUser(userId: string) {\r\n    return this.http.delete(`${environment.accountApi}/${userId}`).pipe(map(res => {\r\n      return res\r\n    }))\r\n  }\r\n\r\n  changeStatus({ email, businessStatus }) {\r\n    return this.http.post(`${environment.accountApi}/accept-business-user`, { email, businessStatus }).pipe(map(res => {\r\n      return res\r\n    }))\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}